| **Характеристика**                | **Zabbix**                                                                 | **Prometheus**                                                             |
|-----------------------------------|---------------------------------------------------------------------------|---------------------------------------------------------------------------|
| **Архитектура**                   | Комплексное решение "всё в одном" (сбор, хранение, анализ, визуализация)   | Модульная система, ориентированная на временные ряды (TSDB)               |
| **Модель сбора данных**           | Push-модель: агенты отправляют данные на сервер                           | Pull-модель: Prometheus запрашивает метрики через HTTP                    |
| **Методы сбора данных**           | Агенты, SNMP, IPMI, JMX, HTTP, ODBC, ICMP, TCP, скрипты                   | Экспортеры (Node Exporter, MySQL Exporter), HTTP-эндпоинты                |
| **Хранение данных**               | Реляционные БД (MySQL, PostgreSQL, Oracle, SQLite)                        | Собственная TSDB, оптимизированная для временных рядов                    |
| **Визуализация**                  | Встроенный веб-интерфейс с дашбордами, графиками, картами                 | Базовый интерфейс (Expression Browser), обычно с Grafana                  |
| **Типы данных**                   | Логи, текстовые данные, события, числовые метрики                         | Числовые метрики (временные ряды), для логов нужен Loki                   |
| **Масштабируемость**              | Подходит для гетерогенных инфраструктур, но ограничена при больших объемах | Легко масштабируется для высоконагруженных систем (Kubernetes, микросервисы) |
| **Оповещения**                    | Встроенные триггеры и оповещения (email, SMS, Telegram)                   | Alertmanager, требует отдельной настройки (интеграция с мессенджерами)    |
| **Язык запросов**                 | Нет мощного языка, анализ через триггеры и функции                        | PromQL — мощный язык для анализа временных рядов                          |
| **Сценарии использования**        | Традиционные IT-инфраструктуры, серверы, сетевое оборудование             | Облачные и микросервисные архитектуры, Kubernetes                         |
| **Лицензия**                      | GNU GPL v2                                                               | Apache License 2.0                                                       |